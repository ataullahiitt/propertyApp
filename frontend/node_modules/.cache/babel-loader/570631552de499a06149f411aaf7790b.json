{"ast":null,"code":"var _jsxFileName = \"/home/ataullah/Explore/docker/node-project/client/src/store/auth-context.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/React.createContext({\n  token: '',\n  isLoggedIn: false,\n  userData: null,\n  login: token => {},\n  logout: () => {}\n});\nexport const AuthContextProvider = props => {\n  _s();\n\n  const initialToken = localStorage.getItem('token');\n  const initialUserData = localStorage.getItem('userData');\n  const [token, setToken] = useState(initialToken);\n  const [userData, setUserData] = useState(JSON.parse(initialUserData));\n  const userIsLoggedIn = !!token;\n\n  const loginHandler = userData => {\n    const {\n      token,\n      user\n    } = userData;\n    setToken(token);\n    setUserData(user);\n    localStorage.setItem('token', token);\n    localStorage.setItem('userData', JSON.stringify(user));\n  };\n\n  const logoutHandler = () => {\n    setToken(null);\n    setUserData(null);\n    localStorage.removeItem('token');\n    localStorage.removeItem('userData');\n  };\n\n  const contextValue = {\n    token: token,\n    userData: userData,\n    isLoggedIn: userIsLoggedIn,\n    login: loginHandler,\n    logout: logoutHandler\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: contextValue,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 12\n  }, this);\n};\n\n_s(AuthContextProvider, \"mgBD0epkgzCihBE2ynlvujH3z3s=\");\n\n_c = AuthContextProvider;\nexport default AuthContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"sources":["/home/ataullah/Explore/docker/node-project/client/src/store/auth-context.js"],"names":["React","useState","AuthContext","createContext","token","isLoggedIn","userData","login","logout","AuthContextProvider","props","initialToken","localStorage","getItem","initialUserData","setToken","setUserData","JSON","parse","userIsLoggedIn","loginHandler","user","setItem","stringify","logoutHandler","removeItem","contextValue","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,MAAMC,WAAW,gBAAGF,KAAK,CAACG,aAAN,CAAoB;AACpCC,EAAAA,KAAK,EAAE,EAD6B;AAEpCC,EAAAA,UAAU,EAAE,KAFwB;AAGpCC,EAAAA,QAAQ,EAAE,IAH0B;AAIpCC,EAAAA,KAAK,EAAGH,KAAD,IAAW,CAAG,CAJe;AAKpCI,EAAAA,MAAM,EAAE,MAAM,CAAG;AALmB,CAApB,CAApB;AAQA,OAAO,MAAMC,mBAAmB,GAAIC,KAAD,IAAW;AAAA;;AAE1C,QAAMC,YAAY,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAArB;AACA,QAAMC,eAAe,GAAGF,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAxB;AAEA,QAAM,CAACT,KAAD,EAAQW,QAAR,IAAoBd,QAAQ,CAACU,YAAD,CAAlC;AACA,QAAM,CAACL,QAAD,EAAWU,WAAX,IAA0Bf,QAAQ,CAACgB,IAAI,CAACC,KAAL,CAAWJ,eAAX,CAAD,CAAxC;AACA,QAAMK,cAAc,GAAG,CAAC,CAACf,KAAzB;;AAEA,QAAMgB,YAAY,GAAId,QAAD,IAAc;AAE/B,UAAM;AAAEF,MAAAA,KAAF;AAASiB,MAAAA;AAAT,QAAkBf,QAAxB;AACAS,IAAAA,QAAQ,CAACX,KAAD,CAAR;AACAY,IAAAA,WAAW,CAACK,IAAD,CAAX;AAEAT,IAAAA,YAAY,CAACU,OAAb,CAAqB,OAArB,EAA8BlB,KAA9B;AACAQ,IAAAA,YAAY,CAACU,OAAb,CAAqB,UAArB,EAAiCL,IAAI,CAACM,SAAL,CAAeF,IAAf,CAAjC;AACH,GARD;;AASA,QAAMG,aAAa,GAAG,MAAM;AACxBT,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACAC,IAAAA,WAAW,CAAC,IAAD,CAAX;AACAJ,IAAAA,YAAY,CAACa,UAAb,CAAwB,OAAxB;AACAb,IAAAA,YAAY,CAACa,UAAb,CAAwB,UAAxB;AACH,GALD;;AAOA,QAAMC,YAAY,GAAG;AACjBtB,IAAAA,KAAK,EAAEA,KADU;AAEjBE,IAAAA,QAAQ,EAAEA,QAFO;AAGjBD,IAAAA,UAAU,EAAEc,cAHK;AAIjBZ,IAAAA,KAAK,EAAEa,YAJU;AAKjBZ,IAAAA,MAAM,EAAEgB;AALS,GAArB;AAOA,sBAAO,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEE,YAA7B;AAAA,cAA4ChB,KAAK,CAACiB;AAAlD;AAAA;AAAA;AAAA;AAAA,UAAP;AAEH,CAlCM;;GAAMlB,mB;;KAAAA,mB;AAoCb,eAAeP,WAAf","sourcesContent":["import React, { useState } from 'react';\n\nconst AuthContext = React.createContext({\n    token: '',\n    isLoggedIn: false,\n    userData: null,\n    login: (token) => { },\n    logout: () => { }\n});\n\nexport const AuthContextProvider = (props) => {\n\n    const initialToken = localStorage.getItem('token');\n    const initialUserData = localStorage.getItem('userData');\n\n    const [token, setToken] = useState(initialToken);\n    const [userData, setUserData] = useState(JSON.parse(initialUserData));\n    const userIsLoggedIn = !!token;\n\n    const loginHandler = (userData) => {\n\n        const { token, user } = userData;\n        setToken(token);\n        setUserData(user);\n\n        localStorage.setItem('token', token);\n        localStorage.setItem('userData', JSON.stringify(user));\n    }\n    const logoutHandler = () => {\n        setToken(null);\n        setUserData(null)\n        localStorage.removeItem('token');\n        localStorage.removeItem('userData');\n    }\n\n    const contextValue = {\n        token: token,\n        userData: userData,\n        isLoggedIn: userIsLoggedIn,\n        login: loginHandler,\n        logout: logoutHandler\n    }\n    return <AuthContext.Provider value={contextValue}>{props.children}</AuthContext.Provider>\n\n}\n\nexport default AuthContext;\n"]},"metadata":{},"sourceType":"module"}